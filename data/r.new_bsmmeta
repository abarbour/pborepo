#!/usr/bin/env Rscript --no-save

###
#	r.new_bsm.R
#	/Users/abarbour/survey.processing/development/R/packages/pborepo/data
#	Created by 
#		/Users/abarbour/bin/ropen ( v. 2.6.0 )
#	on 
#		2016:314 (09-November)
###

## local functions
#try(source('funcs.R'))

## libs

#if (!require("pacman")) install.packages("pacman", dependencies=TRUE)
#pacman::p_load(package1, package2, package_n)

# loads core tidy packages:  ggplot2, tibble, tidyr, readr, purrr, and dplyr
library(tidyverse)
#tidyverse_conflicts()
#tidyverse_update(TRUE)

## local/github libs
# devtools::install_github("abarbour/kook")
#library(kook)
#Set1 <- brew.set1()
#Set1l <- brew.set1(TRUE)
#Dark2 <- brew.dark2()
#Dark2l <- brew.dark2(TRUE)
#Dark2ll <- brew.dark2(TRUE,TRUE)

#+++++++++++

countSpaces <- function(st) { sapply(gregexpr(" ", st), function(p) { sum(p>=0) } ) }

get16_SiteName <- function(x){
	unlist(sapply(strsplit(x, ","), function(.x.){
		tx <- trimws(.x.)
		sta16 <- tx[nchar(tx) == 16]
		# ignore those with spaces [ ]
		res <- sta16[countSpaces(sta16) == 0]
		if (!length(res)) res <- ""
		return(res)
	}))
}

get_region <- function(sta16){
	#blacka900bcn2007
	#         ^^^
	#1234567890123456
	#0        1
	sta16 <- as.character(sta16)
	nc <- nchar(sta16)
	res <- stringr::str_sub(sta16, 11, 12)
	res[nc==0] <- ".?."
	res
}

#+++++++++++
lsms <- c("CHL1","CHL2","DHL1","DHL2","GVS1","SCS1","SCS2")
excludes <- c()

currSysTime <- Sys.time()

u <- "https://service.iris.edu/fdsnws/station/1/query?network=PB&channel=LS*&format=text&includeavailability=true"
message(u)
read_delim(u, delim="|", col_names=TRUE, trim_ws=TRUE) -> quer

quer %>%
	#dplyr::select(., -ends_with('Network')) %>%
	#dplyr::filter(., nchar(Station)==4 & substr(Station,1,1) %in% c('A','B')) %>%
	dplyr::transmute(., 
		sta4 = factor(Station), 
		sta16 = factor(get16_SiteName(SiteName)), 
		nlat=Latitude, elon=Longitude, 
		elev.m = Elevation, 
		region = factor(get_region(sta16)),
		#gham.geocode=NA, 
		is.bsm = !(sta4 %in% lsms), is.active = EndTime > currSysTime,
		StartTime, 
		EndTime) %>% 
	dplyr::arrange(!is.bsm, region, nlat) -> coords

bsmmeta2 <- list(
	ws_url = u,
	DB_updated = currSysTime,
	coords=coords
)

coords %>% dplyr::group_by(region) %>% dplyr::count(.) %>% arrange(-n)

message("saving bsmmeta2.rda ...")
save(bsmmeta2, file="bsmmeta2.rda")

#+++++++++++


